{"version":3,"sources":["component/Cards/Cards.module.css","component/Cards/Cards.jsx","component/Apexchart/ApexChart.js","component/ChartsComp/ChartsComp.js","App.js","test.js","index.js","App.module.css"],"names":["module","exports","Cards","props","console","log","statewise","selectedstate","undefined","statewis","confirmed","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","gutterBottom","variant","style","color","start","end","parseInt","duration","seperator","Date","toGMTString","slice","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","Graph","alldata","cases_time_series","length","date","series","theme","name","data","totalconfirmed","totalrecovered","totaldeceased","options","chart","dataLabels","enabled","stroke","curve","xaxis","type","categories","tooltip","x","format","backgroundColor","textAlign","fontWeight","height","width","state","labels","datasets","label","fill","lineTension","borderColor","borderWidth","App","React","Component","statedata","total","allstates","statelist","handleChange","event","setState","target","value","filter","loopstates","fetch","then","response","json","catch","err","this","lastupdatedtime","statecode","statenotes","FormControl","display","flexDirection","alignItems","marginBottom","Select","labelId","id","onChange","map","i","MenuItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cc9e6a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3iS_i\",\"card\":\"Cards_card__rG9kq\",\"confirmed\":\"Cards_confirmed__3Ji7_\",\"active\":\"Cards_active__2dusk\",\"recovered\":\"Cards_recovered__1lJhQ\",\"deaths\":\"Cards_deaths__2xYgX\"};","import React from 'react'\r\nimport { CardContent, Card, Typography, Grid, StylesProvider } from '@material-ui/core';\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nfunction Cards(props) {\r\n    console.log(props)\r\n    console.log(props.statewise)\r\n    console.log(props.selectedstate)\r\n    if(props.statewise===undefined){\r\n        return null;\r\n    }\r\n    if(props.statewis.confirmed===undefined){\r\n        return null\r\n      }\r\n    \r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={4} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card,styles.confirmed)}>\r\n                    <CardContent >\r\n                        <Typography  gutterBottom>Confirmed</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp style={{color: 'slateblue'}}\r\n                                start={0}\r\n                                end={parseInt(props.statewise[0].confirmed)}\r\n                                duration={2.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography >{new Date().toGMTString().slice(5,17)}</Typography>\r\n                        <Typography  gutterBottom>Confirmed Today</Typography>\r\n                        <Typography variant=\"body2\">\r\n                            <CountUp style={{color: 'slateblue'}}\r\n                                start={0}\r\n                                end={parseInt(props.statewise[0].deltaconfirmed)}\r\n                                duration={2.5}\r\n                                seperator=\",\"\r\n                            />\r\n\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card,styles.active)}>\r\n                    <CardContent>\r\n                        <Typography  gutterBottom>Active</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp style={{color: '#42a5f5'}}\r\n                                start={0}\r\n                                end={parseInt(props.statewise[0].active)}\r\n                                duration={2.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography >{new Date().toGMTString().slice(5,17)}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography  gutterBottom>\r\n                            Recovered\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp style={{color: '#00e658'}}\r\n                                start={0}\r\n                                end={parseInt(props.statewise[0].recovered)}\r\n                                duration={2.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography >{new Date().toGMTString().slice(5,17)}</Typography>\r\n                        <Typography  gutterBottom>Recovered Today</Typography>\r\n                        <Typography variant=\"body2\">\r\n                        <CountUp    style={{color: '#00e658'}}\r\n                                start={0}\r\n                                end={parseInt(props.statewise[0].deltarecovered)}\r\n                                duration={2.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography  gutterBottom>\r\n                            Deaths\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp style={{color: '#f44336'}}\r\n                                start={0}\r\n                                end={parseInt(props.statewise[0].deaths)}\r\n                                duration={2.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography >{new Date().toGMTString().slice(5,17)}</Typography>\r\n                        <Typography  gutterBottom>Died Today</Typography>\r\n                        <Typography variant=\"body2\">\r\n                        <CountUp style={{color: '#f44336'}}\r\n                                start={0}\r\n                                end={parseInt(props.statewise[0].deltadeaths)}\r\n                                duration={2.5}\r\n                                seperator=\",\"\r\n                            />\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Cards\r\n","import React from \"react\";\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport './ApexChart.scss'\r\n\r\nfunction Graph(props){\r\n    console.log(props.alldata.cases_time_series[props.alldata.cases_time_series.length-1].date)\r\n  \r\nconst series= [{\r\n        theme: 'fusion',\r\n        name: 'Total Confirmed',\r\n        data: [\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-1].totalconfirmed,\r\n           \r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-12].totalconfirmed,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-20].totalconfirmed,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-28].totalconfirmed,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-35].totalconfirmed,\r\n        ]\r\n      }, {\r\n        name: 'Total Recovered',\r\n        data: [\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-1].totalrecovered,\r\n           \r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-12].totalrecovered,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-20].totalrecovered,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-28].totalrecovered,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-35].totalrecovered,\r\n        ] \r\n      },{\r\n        name: 'Total Deaths',\r\n        data: [\r\n          props.alldata.cases_time_series[props.alldata.cases_time_series.length-1].totaldeceased,\r\n            \r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-12].totaldeceased,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-20].totaldeceased,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-28].totaldeceased,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-35].totaldeceased,\r\n        ]\r\n      }\r\n    ];\r\n      const options={  \r\n      chart: {\r\n    \r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        \r\n      },\r\n      xaxis: {\r\n        type: 'datetime',\r\n        categories: [\r\n            new Date().toGMTString().slice(5,12),\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-12].date,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-20].date,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-28].date,\r\n            props.alldata.cases_time_series[props.alldata.cases_time_series.length-35].date,\r\n        ]\r\n      },\r\n      tooltip: {\r\n        x: {\r\n          format: 'dd MMM',\r\n          \r\n        },\r\n      }\r\n    }\r\n\r\n      return(\r\n          <div style={{backgroundColor: \"white\", textAlign: \"center\"}}>\r\n              <br/>\r\n              <h2 style={{fontWeight:'400'}}>All India Covid Stats Graphical Representation</h2>\r\n              <br />\r\n              <div className=\"Apex\">\r\n              <ReactApexChart options={options} series={series} type=\"area\" height={250} style={{width:\"60%\"}} />              \r\n              <ReactApexChart options={options} series={series} type=\"bar\" height={250} style={{width:\"60%\"}} />\r\n              </div>\r\n          </div>\r\n      )\r\n}\r\n\r\nexport default Graph;","import React from 'react';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nconst state = {\r\n  labels: ['January', 'February', 'March',\r\n           'April', 'May'],\r\n  datasets: [\r\n    {\r\n      label: 'Rainfall',\r\n      fill: false,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(75,192,192,1)',\r\n      borderColor: 'rgba(0,0,0,1)',\r\n      borderWidth: 2,\r\n      data: [65, 59, 80, 81, 56]\r\n    }\r\n  ]\r\n}\r\n\r\n class ChartComp extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Bar\r\n          data={state}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Average Rainfall per month',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'right'\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ChartComp;","import React, { Component } from 'react'\n// import Cards from './component/Cards/Cards'\n// import Chart from './component/Chart/Chart'\nimport './App.module.css'\nimport FormControl from '@material-ui/core/FormControl';\nimport { Select, MenuItem, InputLabel } from '@material-ui/core'\nimport Cards from './component/Cards/Cards';\nimport Charts from './component/Chart/Charts';\nimport ApexChart from './component/Apexchart/ApexChart';\nimport ChartComp from './component/ChartsComp/ChartsComp';\n\n\n\n\nexport class App extends Component {\n  statedata = {}\n  state = {\n    total: [],\n    statewis: [],                           // statewise data\n    selectedstate: undefined,                      //selected Country\n    allstates: [\n       \n    ],\n    statelist:[\n\n    ],\n    statedata: undefined\n  }\n\n  //  async componentDidMount(){\n  //     const fetchedData = await fetchData()\n  //     this.setState({data:fetchedData})\n  //   }\n\n  // My way\n  componentDidMount() {\n    \n    const url = \"https://api.covid19india.org/data.json\"\n \n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data)\n      var index=0;\n      this.setState({ total: data.cases_time_series[data.cases_time_series.length - 1] })\n      this.setState({ statewis: data.statewise[0]})\n      this.setState({allstates: data})\n      \n      let v = '';\n      \n      // this.setState({cases_time_series : cases_time_series[cases_time_series.length-1]})\n      // console.log(this.state.time.cases_time_series[this.state.time.cases_time_series.length-2])\n      \n    }).catch(err=>{\n      console.log(err)\n    })\n\n\n  }\n  handleChange = (event) => {\n//    this.state.selectedstate=event.target.value ;\n\n    this.setState(function(state) {\n      return {\n        selectedstate: event.target.value\n      };\n    });\n\n    this.setState(function(state) {\n      console.log(state.selectedstate)\n      return {statedata: state.allstates.statewise.filter(item=>{\n        if(item.state==state.selectedstate){\n          return true;\n        }\n      })};\n    });\n    console.log(this.state.selectedstate)\n\n    this.setState()\n  };\n\n  loopstates =()=>{\n    \n  //  for(let a=0; a<38; a++){\n  //   <h1>{this.state.allstates.statewise[a].state}</h1>\n  // }\n  \n  \n  }\n\n \n  render(){\n    console.log(this.state.selectedstate)\n   console.log(this.state.statewis)\n    console.log(this.state.statedata)   //undefined\n    console.log(this.state.allstates)\n    const { total, statewis, allstates} = this.state;\n    const { active, confirmed, deaths, deltaconfirmed, deltadeaths, deltarecovered, lastupdatedtime, recovered, state, statecode, statenotes } = this.state.statewis;\n    const confirmedInt = parseInt(confirmed);\n        \n\n    // if(isNaN(confirmedInt)){\n    //   return null;\n    // }\n    if(this.state.allstates.statewise===undefined){\n      return \"Loading...\";\n    }\n    \n    // console.log(this.state.allstates.statewise[this.state.allstates.statewise.length].active)\n    return (\n      <div className=\"container\">\n        \n         <Cards statewis={this.state.statewis} selectedstate={this.state.selectedstate} statewise={this.state.statedata}/>  \n        <div className=\"state-selector\" >\n          <h2 style={{textAlign:\"center\"}}>Select State</h2>\n        <FormControl style={{display:'flex',flexDirection:'column',alignItems:\"center\", marginBottom:\"2vh\"}}>\n          {/* <InputLabel style={{}} id=\"demo-simple-select-label\">State</InputLabel> */}\n          <Select style={{width:\"50vw\"}} labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={this.selectedstate}\n            onChange={this.handleChange}>\n          \n          {\n             \n             this.state.allstates.statewise.map(function(item, i){\n              return <MenuItem value={item.state} >{item.state}</MenuItem>\n            })\n         \n        }\n\n          </Select>\n          \n        </FormControl> \n        </div>\n        {/* <ChartComp/> */}\n       <ApexChart statewise={this.state.statedata} alldata={this.state.allstates} statewis={this.state.statewis}/>\n          {/* <Charts className=\"chart\" alldata={this.state.allstates} statewise={this.state.statedata} />  */}\n      </div>\n    )\n  }\n}\n\n\nexport default App\n","import React, { Component } from 'react'\r\n\r\nexport class Testing extends Component {\r\n    state={\r\n        total : [],\r\n        statewise: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        const url= \"https://api.covid19india.org/data.json\"\r\n        fetch(url).then(response=> response.json()).then(data=>{\r\n            console.log(data)\r\n            this.setState({total: data.statewise[0]})\r\n            this.setState({statewise:data.statewise})\r\n            // this.setState({cases_time_series : cases_time_series[cases_time_series.length-1]})\r\n            // console.log(this.state.time.cases_time_series[this.state.time.cases_time_series.length-2])\r\n            console.log(this.state.total)\r\n            console.log(this.state.statewise)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Hero</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Testing\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Testing from './test';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3chMn\",\"state-selector\":\"App_state-selector__2TdUg\"};"],"sourceRoot":""}